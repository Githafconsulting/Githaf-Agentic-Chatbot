[pytest]
# Pytest Configuration (Phase 6: Testing & Polish)

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths = tests

# Markers for organizing tests
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (require database, external services)
    benchmark: Performance benchmarks
    slow: Slow-running tests (> 1 second)
    async: Asynchronous tests
    skip_ci: Skip in CI/CD environment

# Asyncio configuration
asyncio_mode = auto

# Output options
addopts =
    --verbose
    --strict-markers
    --tb=short
    --disable-warnings
    -ra
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=60

# Coverage options
[coverage:run]
source = app
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    */scripts/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (prevent hanging)
timeout = 300

# Parallel execution (optional, uncomment to enable)
# addopts = -n auto
